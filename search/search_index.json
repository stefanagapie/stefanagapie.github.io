{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Resume","text":""},{"location":"#summary-statement","title":"Summary Statement","text":"<pre><code>I have over two decades of software development experience. I'm currently focused on writting back-end services \nwith the following technologies:\n  - Python 3.11,\n  - FastAPI for building REST APIs, \n  - SQLAlchemy SQL-Databse ORM, and \n  - Docker for containerization.\n</code></pre>"},{"location":"#work-experience","title":"Work Experience","text":"<pre><code>Software Engineer\nEigen Technologies - Full-time\nApril 2022 - Present\nNew York, NY 10001\n  - Develop plugins for our AI platform that enhance existing or extends the system's capabilities of \n    extracting text from documents that are answers two client constructed queries\n  - Develop space and time effiecnt code to lower computing cost and improve waiting time of text processing\n  - Develop modular Python for increased reusability across multiple client solutions to lower cost\n  - Develop testable Python code by taking a TDD approach to ensure accurate results\n  - Build custom REST APIs to allow custom integration with our client services\n  - Deliver solutions by building and running containerized services for clients\n  - Mentor enginners in developing modular, testable and efficient software in a pair programming setting\n</code></pre> <pre><code>Automation Engineer\nNew Classrooms - Full-time\nMay 2018 - Apr 2022\nNew York, NY 10001\n  - Develop Python code to perform software verification by generating random input and computed expected \n    output data with constrained specifications as per requirements\n  - Automate manual product operations that resulted in faster turnaround time thus increasing productivity\n  - Automate manual database operations that where prone to error and labor intensive such as databse \n    migrations and synchronizations\n  - Automate manual frontend tests, end-to-end tests, REST API tests and increse the scope and depth of testing \n    by several orders of magnitude\n  - Increase the number of bug reports by several orders of magnitude thus resulting in a stabler product\n  - Work with business analysts to improve functional requirement documentation by performing formal \n    requirements verification and minimizing ambiguity while striving to find the correct level of granularity\n  - Mentor automation engineers in engineering best practices\n</code></pre> <pre><code>Machine Learning Software Engineer\nBrooklyn College - Part-time\nJan 2020 - May 2021\nBrooklyn, NY 11210\n  - Developed a multilayer perceptron (a.k.a deep neural network) model to map biomass components in algae; \n    under the supervision of distinguished computer science professor Theodore Raphan in collaboration with \n    professor Juergen Polle of the Department of Biology. I was tasked to build the algae model using Python \n    and TensorFlow, preprocess data using NumPy, generate plots using Matplotlib and prepare reports for \n    analysis. \n</code></pre> <pre><code>Lead Software Engineer\nMobPoll - Part-time\nJun 2013 - Jan 2020\nNew York, NY 10005\n  - Lead a team of four, two engineers a designers and QA person, to build a web based application that \n    enables Facebook users to create, share and participate in approval-style polls. We built MobPoll using \n    a full-stack javascript framework known as Meteor.js. This application is owned by a New York based \n    non-profit organization called Make Voting Count Inc\n</code></pre> <pre><code>Senior iOS Software Engineer \nThomson Reuters - Full-time (Consultant)\nSep 2014 - Jun 2015\nNew York, NY 10036\n  - Collaborate with an engineering team of five to deliver a, mobile first, personalized news service \n    application called Reuters TV. My primary tasks were to implement main app features like \u201cReuters Now\u201d \n    and \u201cLive Feeds.\u201d UI element positioning was defined using Apple\u2019s Auto Layout framework. The codebase is \n    comprised primarily of Objective-C. Most of the UI elements were programmatically implemented\u2014NIB files \n    were sparingly used. My other tasks were to root out and fix software bugs and UI discrepancies.\n</code></pre> <pre><code>Senior iOS Software Engineer\nAmerican Express - Full-time (Consultant)\nMar 2014 - Sep 2014\nNew York, NY 10007\n  - Joined a team of four engineers to implement a partial code rewrite and a complete redesign of American \n    Express\u2019s \u201cServicing\u201d application. I worked on main app features like \u201cSchedule Payments\u201d and \u201cRewards.\u201d \n    We used multiple Storyboard and XIB files to layout the various screen flows. All UILabels and related \n    views were coded to respond to accessibility text size changes; this task was automated using Auto Layout. \n    I used Xcode for building, debugging and testing of our Objective-C codebase. Some of my other \n    responsibilities involved performing rapid prototyping and assisting and mentoring junior developers.\n</code></pre> <pre><code>Senior iOS Software Engineer\nCond\u00e8 Nast - Full-time\nFeb 2013 - Mar 2014\nNew York, NY 10007\n  - I worked with a team of five developers to implement a complete rewrites and redesign of two native iOS \n    applications: an iPhone only app called \u201cGoings On\u201d for the \u201cThe New Yorker\u201d magazine, and an iPhone and \n    iPad app called Epicurious for a food and drinks magazine that goes by the same name. For Goings On I \n    architected and implemented an in-house audio player and audio file downloader\u2014built on top of Apple's \n    Core Audio framework. This was part of an app feature called \u201cAudio Tours.\u201d On Epicurious I architected \n    and built the networking engine that was used throughout the app\u2014built on top of apple's URL Loading \n    System. Another major feature that I worked on was \u201cSearch.\u201d This feature communicated with two backend \n    services for drinks and food recipes and displayed the filtered results. The UI for both apps were \n    implemented with the use of Storyboards along with some XIB/NIB files. Auto Layout was used to controller \n    and/or define dynamic and static view content. Core Data was used for persistence.\n</code></pre> <pre><code>iOS Software Engineer\nVEVO - Full-time\nAug 2011 - Feb 2013\nNew York, NY 10036\n  - Our Agile team of four developers, two of which were based on the West coast, collaborated on delivering \n    new features for VEVO\u2019s existing iPad and iPhone music streaming video applications. When I arrived our \n    app analytics were reporting crashes that were affecting millions of users. I tracked down the source of \n    these crashes to bugs within our video player and corrected them. We went from about 6 million crashes per \n    month to just a few thousand. I also worked on features like \u201cMy Playlist;\u201d a user interface for managing \n    multiple music video playlist that synced up with our web-based backend service.\n</code></pre> <pre><code>Senior iOS Software Engineer\nPAER - Full-time\nSep 2010 - Aug 2011\nNew York, NY 10005\n  - As the sole full-time engineer, I helped this organization implement software for a mobile voting platform, \n    an iPad, that measures changes in user behavior when exposed to alternative voting methods for a particular \n    question. User responses were persisted using Core Data. I participated in a software development lifecycle \n    that included research, new development, modification, correction of errors, code reuse, re-engineering and \n    maintenance of this product.\n</code></pre> <pre><code>Principal iOS Software Engineer\naGupieWare - Full-time\nApr 2008 - Sep 2010\nBrooklyn, NY 11229\n  - A company that I founded for the purpose of creating a portfolio of iOS applications to showcase to \n    potential employees. I built a set of five apps, two of which are universal builds that work with both iPad \n    and iPhone. With the CollageCAD app, a user may design there very own custom coloring pages. Or build their \n    own picture collage with custom shapes that they create; then fill them in with various colors, patterns or \n    images from their photo album and share via Twitter or Facebook. With the \u201cWhere Is My Car Parked?\u201d app, a \n    user may save the geolocation of their vehicle where they last parked it and get directions back to it. \n    With the \u201cNew Year Noise Maker\u201d app, a user will never again be caught on New Year\u2019s Eve without a noise \n    maker. The app provides a set of noise makers, a pre-composed audio ensemble of all the noise makers and an \n    instrumental adaptation to the \u201cAuld Lang Syne\u201d poem. With the iDotsConnect app, a user embarks on a \n    mission, through hundreds of levels, to discover the shortest path between two dots on a graphs that I \n    designed with Photoshop.\n</code></pre> <pre><code>CUDA-C Software Engineer\nReasearch Foundation of CUNY - Full-time\nJul 2006 - Dec 2008\nBrooklyn, NY 11210\n  - Collaborate with a team to develop software that simulates or models both physical and abstract phenomenon \n    in a realtime, massively parallel multi-threaded GPGPU environment (data parallelism). My shared tasks \n    were to architect and program thread kernels for the NVIDA GPGPU chipsets that ran the simulations, test \n    software for correctness, debug issues and prepare summary along with an analysis of our findings.\n</code></pre> <pre><code>Interface Engineer\nDOAR Communications - Full-time\nJan 2003 - Jul 2005\nLynbrook, LI\n  - Program touch interfaces and engineer audio video rack components.\n</code></pre>"},{"location":"#education","title":"Education","text":"<pre><code>Brooklyn College - City University of New York\nM.A. - Computer Science\n\nBrooklyn College - City University of New York\nB.S. - Computer Science\n</code></pre>"},{"location":"#contact","title":"Contact","text":"<p>Run <code>$ python -m contact</code> or use the flowchart to construct the email</p> <p>contact.py<pre><code>def get_contact():\nc = {4: \"com\", 1: \"agapie\", 0: \"stefan\", 2: \"contact\", 3: \"gmail\"}\nreturn f\"{c[0]}.{c[1]}.{c[2]}@{c[3]}.{c[4]}\"\nif __name__ == '__main__':\nprint(get_contact())\n</code></pre> <pre><code>graph LR\n  A[Start] --&gt; B{1+1=3?};\n  B --&gt;|Yes| C[\"burnt.toast.fried\"];\n  B --&gt;|No| D[\"stefan.agapie.contact\"];\n  C --&gt; E{1-1=0?};\n  D --&gt; E;\n  E --&gt;|Yes| F[\"@gmail.com\"];\n  E --&gt;|No| G[\"@pickle.gov\"];</code></pre></p>"},{"location":"docker/docker001/","title":"Under Construction","text":""},{"location":"python/python001/","title":"Under Construction","text":""},{"location":"python/python999/","title":"Samples","text":""},{"location":"python/python999/#code-annotation-examples","title":"Code Annotation Examples","text":""},{"location":"python/python999/#codeblocks","title":"Codeblocks","text":"<p>Some <code>code</code> goes here.</p>"},{"location":"python/python999/#plain-codeblock","title":"Plain codeblock","text":"<pre><code>import tensorflow as tf\ndef myfunction():\n# some comment\n</code></pre>"},{"location":"python/python999/#with-a-title-line-numbers-and-highlight-lines-2-and-3","title":"With a title, line numbers and highlight lines 2 and 3","text":"bubble_sort.py<pre><code>def bubble_sort(items):\nfor i in range(len(items)):\nfor j in range(len(items) - 1 - i):\nif items[j] &gt; items[j + 1]:\nitems[j], items[j + 1] = items[j + 1], items[j]\n</code></pre>"},{"location":"python/python999/#icons-and-emojis","title":"Icons and Emojis","text":""}]}